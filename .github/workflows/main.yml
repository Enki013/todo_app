name: Flutter Build and Release

on:
  push:
    branches:
      - main 

jobs:
  build_and_release_android:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.2'

    - name: Get dependencies
      run: flutter pub get
      
    - name: Build APK
      run: flutter build apk
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}_android
        release_name: Release ${{ github.run_number }} - Android
        draft: false
        prerelease: false

    - name: Upload APK
      id: upload_apk_release_asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/app/outputs/flutter-apk/app-release.apk
        asset_name: app-release.apk
        asset_content_type: application/vnd.android.package-archive

  build_and_release_ios:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.2'

    - name: Get dependencies
      run: flutter pub get

    - name: Build iOS
      run: flutter build ios --no-codesign

    - name: Create Release
      id: create_release_ios
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}_ios
        release_name: Release ${{ github.run_number }} - iOS
        draft: false
        prerelease: false
        
    - name: Zip iOS IPA
      run: |
       cd ./build/ios/iphoneos
       zip -r app-release-ios.zip *
    
    - name: Upload iOS IPA
      id: upload_ios_release_asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release_ios.outputs.upload_url }}
        asset_path: ./build/ios/iphoneos/app-release-ios.zip
        asset_name: app-release-ios.zip
        asset_content_type: application/zip
   
  build_and_release_windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.2'

    - name: Get dependencies
      run: flutter pub get

    - name: Build Windows
      run: flutter build windows
      
    - name: Create Release
      id: create_release_windows
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}_windows
        release_name: Release ${{ github.run_number }} - Windows
        draft: false
        prerelease: false
        
    - name: Zip and Upload Windows Build
      run:  Compress-Archive -Path ./build/windows/x64/runner/Release/* -DestinationPath app-release-windows.zip -Force

        
    - name: Upload Windows Build
      id: upload_windows_release_asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release_windows.outputs.upload_url }}
        asset_path: ./app-release-windows.zip
        asset_name: app-release-windows.zip
        asset_content_type: application/zip

  build_and_release_linux:
     runs-on: ubuntu-latest

     steps:
     - name: Checkout code
       uses: actions/checkout@v2
       
     - name: Setup Ninja, CMake, and g++
       run: |
        sudo apt update
        sudo apt install ninja-build
        sudo apt install cmake
        sudo apt install g++
        sudo apt install libgtk-3-dev
        
     - name: Setup Flutter
       uses: subosito/flutter-action@v2
       with:
        flutter-version: '3.19.2'

     - name: Get dependencies
       run: flutter pub get

     - name: Build Linux
       run: flutter build linux
       
     - name: Archive Linux Build
       run: tar -zcvf app-release-linux.tar.gz -C ./build/linux/x64/release/bundle .
       
     - name: Create Release
       id: create_release_linux
       uses: actions/create-release@v1
       env:
         GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
       with:
         tag_name: v${{ github.run_number }}_linux
         release_name: Release ${{ github.run_number }} - Linux
         draft: false
         prerelease: false
        
     - name: Upload Linux App
       id: upload_linux_release_asset 
       uses: actions/upload-release-asset@v1
       env:
         GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
       with:
         upload_url: ${{ steps.create_release_linux.outputs.upload_url }}
         asset_path: ./app-release-linux.tar.gz
         asset_name: app-release-linux.tar.gz
         asset_content_type: application/gzip
